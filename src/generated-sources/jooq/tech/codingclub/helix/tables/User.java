/**
 * This class is generated by jOOQ
 */
package tech.codingclub.helix.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User extends org.jooq.impl.TableImpl<tech.codingclub.helix.tables.records.UserRecord> {

	private static final long serialVersionUID = 733083307;

	/**
	 * The singleton instance of <code>public.user</code>
	 */
	public static final tech.codingclub.helix.tables.User USER = new tech.codingclub.helix.tables.User();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<tech.codingclub.helix.tables.records.UserRecord> getRecordType() {
		return tech.codingclub.helix.tables.records.UserRecord.class;
	}

	/**
	 * The column <code>public.user.id</code>.
	 */
	public final org.jooq.TableField<tech.codingclub.helix.tables.records.UserRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.user.name</code>.
	 */
	public final org.jooq.TableField<tech.codingclub.helix.tables.records.UserRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>public.user.email</code>.
	 */
	public final org.jooq.TableField<tech.codingclub.helix.tables.records.UserRecord, java.lang.String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>public.user.password</code>.
	 */
	public final org.jooq.TableField<tech.codingclub.helix.tables.records.UserRecord, java.lang.String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>public.user.token</code>.
	 */
	public final org.jooq.TableField<tech.codingclub.helix.tables.records.UserRecord, java.lang.String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>public.user.from</code>.
	 */
	public final org.jooq.TableField<tech.codingclub.helix.tables.records.UserRecord, java.lang.String> FROM = createField("from", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>public.user.to</code>.
	 */
	public final org.jooq.TableField<tech.codingclub.helix.tables.records.UserRecord, java.lang.String> TO = createField("to", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>public.user.live_station</code>.
	 */
	public final org.jooq.TableField<tech.codingclub.helix.tables.records.UserRecord, java.lang.String> LIVE_STATION = createField("live_station", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>public.user.live_goingTo</code>.
	 */
	public final org.jooq.TableField<tech.codingclub.helix.tables.records.UserRecord, java.lang.String> LIVE_GOINGTO = createField("live_goingTo", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * Create a <code>public.user</code> table reference
	 */
	public User() {
		this("user", null);
	}

	/**
	 * Create an aliased <code>public.user</code> table reference
	 */
	public User(java.lang.String alias) {
		this(alias, tech.codingclub.helix.tables.User.USER);
	}

	private User(java.lang.String alias, org.jooq.Table<tech.codingclub.helix.tables.records.UserRecord> aliased) {
		this(alias, aliased, null);
	}

	private User(java.lang.String alias, org.jooq.Table<tech.codingclub.helix.tables.records.UserRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, tech.codingclub.helix.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<tech.codingclub.helix.tables.records.UserRecord, java.lang.Long> getIdentity() {
		return tech.codingclub.helix.Keys.IDENTITY_USER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<tech.codingclub.helix.tables.records.UserRecord> getPrimaryKey() {
		return tech.codingclub.helix.Keys.USER_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<tech.codingclub.helix.tables.records.UserRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<tech.codingclub.helix.tables.records.UserRecord>>asList(tech.codingclub.helix.Keys.USER_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public tech.codingclub.helix.tables.User as(java.lang.String alias) {
		return new tech.codingclub.helix.tables.User(alias, this);
	}

	/**
	 * Rename this table
	 */
	public tech.codingclub.helix.tables.User rename(java.lang.String name) {
		return new tech.codingclub.helix.tables.User(name, null);
	}
}
